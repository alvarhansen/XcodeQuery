name: Update Homebrew Tap

on:
  workflow_run:
    workflows: ["Release"]
    types: [completed]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to publish to tap (optional). Defaults to latest if omitted."
        required: false
        type: string

jobs:
  update-tap:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-latest
    steps:
      - name: Checkout XcodeQuery
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare variables
        id: prep
        env:
          EVENT_NAME: ${{ github.event_name }}
          DISPATCH_TAG: ${{ inputs.tag }}
        run: |
          set -euo pipefail
          # If manually dispatched and a tag is provided, use it; otherwise resolve from the completed Release run
          if [ "$EVENT_NAME" = "workflow_dispatch" ] && [ -n "${DISPATCH_TAG:-}" ]; then
            TAG="$DISPATCH_TAG"
          else
            SHA="${{ github.event.workflow_run.head_sha }}"
            git fetch --tags --force
            TAG=$(git tag --points-at "$SHA" | head -n1)
            if [ -z "$TAG" ]; then
              TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
            fi
          fi
          if [ -z "$TAG" ]; then
            echo "Could not resolve tag for head_sha=$SHA" >&2
            exit 1
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          ASSET_URL="https://github.com/alvarhansen/XcodeQuery/releases/download/${TAG}/xcq-${TAG}-macos.zip"
          echo "asset_url=$ASSET_URL" >> $GITHUB_OUTPUT
          VERSION_NO_V="${TAG#v}"
          echo "version=$VERSION_NO_V" >> $GITHUB_OUTPUT

      - name: Compute asset sha256
        id: sha
        run: |
          # Retry until the release asset is available to avoid any propagation delay
          curl -fL --retry 30 --retry-delay 5 --retry-all-errors "${{ steps.prep.outputs.asset_url }}" -o xcq.zip
          SHASUM=$(shasum -a 256 xcq.zip | awk '{print $1}')
          echo "sha=$SHASUM" >> $GITHUB_OUTPUT

      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: alvarhansen/homebrew-xcodequery
          token: ${{ secrets.GITHUB_TOKEN }}
          path: tap

      - name: Update formula in tap (binary install)
        working-directory: tap
        run: |
          set -euo pipefail
          mkdir -p Formula
          {
            echo 'class Xcq < Formula'
            echo '  desc "Query and introspect Xcode projects from the CLI"'
            echo '  homepage "https://github.com/alvarhansen/XcodeQuery"'
            echo '  license "MIT"'
            echo ''
            echo '  url "__ASSET_URL__"'
            echo '  sha256 "__SHA__"'
            echo '  version "__VERSION__"'
            echo ''
            echo '  head "https://github.com/alvarhansen/XcodeQuery.git", branch: "main"'
            echo ''
            echo '  depends_on xcode: :build'
            echo ''
            echo '  def install'
            echo '    if build.head?'
            echo '      ENV["SWIFTPM_DISABLE_SANDBOX"] = "1"'
            echo '      system "swift", "build", "--disable-sandbox", "-c", "release"'
            echo '      bin.install ".build/release/xcq"'
            echo '    else'
            echo '      bin.install "xcq"'
            echo '    end'
            echo '  end'
            echo ''
            echo '  test do'
            echo '    system bin/"xcq", "--help"'
            echo '  end'
            echo 'end'
          } > Formula/xcq.rb
          sed -i '' "s|__ASSET_URL__|${{ steps.prep.outputs.asset_url }}|g" Formula/xcq.rb
          sed -i '' "s|__SHA__|${{ steps.sha.outputs.sha }}|g" Formula/xcq.rb
          sed -i '' "s|__VERSION__|${{ steps.prep.outputs.version }}|g" Formula/xcq.rb
          git add Formula/xcq.rb
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Update xcq to ${{ steps.prep.outputs.tag }}" || echo "No changes to commit"
          git push
